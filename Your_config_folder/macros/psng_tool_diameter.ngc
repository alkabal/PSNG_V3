o<psng_tool_diameter> sub


o<psng_load_var_ini_tool_setter> call

M160    ;o<clear-axis-info> call
o15 if [#<_psng_ts_height> LE 0]
    (ABORT,TOOLSETTER HEIGHT NOT PROBED/CONFIGURED)
o15 endif

o<psng_goto_toolsensor> call

(cancel Z offsets)
G92.1                                                                      ; use pause can be better than reset ??? ADDED 12/2021 NEED TO BE VERIFED
G49

o<backup_coord_offset> call                                                ; backup G54 offset for correct calc tool measurement

o<psng_start_z_probing> call
o40 if [#5070 EQ 0]
    (ABORT,TOOL SETTER FOR TOOL DIAMETER DOES NOT FOUND THE CONTACT POINT)
o40 endif

G91                    ; For next move we need to manage additional Move away for allow tool to contact tool setter for diameter
o50 if [#<_current_tool> EQ #<_probe_number>]
     (DEBUG,USE PROBE DIAM for calc Z clearence)
     G1 Z[#<_psng_z_clearance> - #<_psng_latch> - 0.5*#<_psng_tool_diam>] F#<_psng_search_vel>
o50 else
     (DEBUG,USE Zclearence - LATCH)
     G1 Z[0.7*#<_psng_z_clearance> - #<_psng_latch>] F#<_psng_search_vel>    ; macro use z_clearance*0.7 for allow tool to be en contact with setter pad
o50 endif
G90

#<_psng_touch_calculated_z> = [#<_psng_touch_result_Z> - #<_psng_ts_height> + #<_backup_coord_offset>]
(print, probe Z=#<_psng_touch_calculated_z> )

G10 L1 P#<_current_tool> Z#<_psng_touch_calculated_z>


;(start spindle if you use reverse spindle for tool diameter measuring)
o60 if [#<_current_tool> GT 0 AND #<_current_tool> NE #<_probe_number> and #<_hal[probe.use_rotate_spindle]> EQ 1 AND #<_hal[and2.combined-probe.in0]> EQ 1]
     M4 S[#<_ini[TOOL_SETTER]REV_ROT_SPEED>]
o60 endif

; nothing to do at the end of this ; next for x+ x- y+ y- call inside python code
o<psng_tool_diameter> endsub
M2
