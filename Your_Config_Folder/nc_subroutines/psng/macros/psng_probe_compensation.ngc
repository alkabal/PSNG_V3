o<psng_probe_compensation> sub
;!/usr/bin/env python
;
; Copyright (c) 2022 Alkabal free fr for PSNG_V3
;
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; If not, see <http://www.gnu.org/licenses/>.


(This GCode script was designed to adjust the Z height of a CNC machine according)
(to the tiny variations in the surface height in order to achieve a better result in the milling/etching process)

(The following is a "checklist" which can be used before the probe routine starts)
(1. Make sure the probe is working correctly)
(2. Home all axis)
(3. Move X and Y to the desired start position)
(4. Adjust value for length and counts)
(5. Click ok and the probe routine will start)
(Note: The first probe will touch off Z to 0.0 when it first touches to the surface,)
(all other probe values are relative to this first point)

(Configuration section)
; you need to add some amount on each side for keep probe outside correctly

#<_x_move_travel>     = [#<_psng_compensation_xlength> / [#<_psng_compensation_xcount> - 1]]  ; -1 for converting point number to move segment
#<_y_move_travel>     = [#<_psng_compensation_ylength> / [#<_psng_compensation_ycount> - 1]]  ; -1 for converting point number to move segment


#<_direction>         = 0
#<_x_count_done>      = 0
#<_y_count_done>      = 0
#<_x_pos_calc>        = 0
#<_y_pos_calc>        = 0


; this method require to have the machine table configured as G54 Z0 after M6 Tx G43


(End configuration section)

M160    ;o<clear-axis-info> call


  G90 G21 G17
  G40 (disable cutter compensation)
  G43 (enable tool length compensation)

  o10 if [#<_hal[motion.probe-input]> EQ 1]
      (ABORT,!!! PROBE OR SETTER Z ALREADY TRIGGERED BEFORE PROBING COMPENSATION !!!)
  o10 endif

  ;o100 if [[#<_psng_initial_x> LT #<_hal[ini.x.min_limit]>] OR [#<_psng_initial_x> GT #<_hal[ini.x.max_limit]>]]
  ;   (DEBUG,!!! GRID Y START POSITION #<_psng_initial_y> !!!)
  ;   (ABORT,!!! GRID X START POSITION #<_psng_initial_x> OUT OF MACHINE AREA min #<_hal[ini.x.min_limit]> max #<_hal[ini.x.max_limit]>!!!)
  ;
  ;o100 elseif [[#<_psng_initial_y> LT #<_hal[ini.y.min_limit]>] OR [#<_psng_initial_y> GT #<_hal[ini.y.max_limit]>]]
  ;   (DEBUG,!!! GRID X START POSITION #<_psng_initial_x> !!!)
  ;   (ABORT,!!! GRID Y START POSITION #<_psng_initial_y> OUT OF MACHINE AREA min #<_hal[ini.y.min_limit]> max #<_hal[ini.y.max_limit]>!!!)
  ;
  ;o100 elseif [[#<_psng_initial_x> + #<_psng_compensation_xlength>] GT #<_psng_x_axis_length_abs>]
  o100 if [[#<_psng_initial_x> + #<_psng_compensation_xlength>] GT #<_psng_x_axis_length_abs>]
     (ABORT,!!! GRID X START POSITION #<_psng_initial_x> + LENGTH #<_psng_compensation_xlength>HIGHER THAN AXIS X MAX #<_hal[ini.x.max_limit]>!!!)

  o100 elseif [[-#<_psng_initial_y> - #<_psng_compensation_ylength>] GT #<_psng_y_axis_length_abs>]
     (ABORT,!!! GRID Y START POSITION #<_psng_initial_y> + LENGTH #<_psng_compensation_ylength>HIGHER THAN AXIS Y MIN #<_hal[ini.y.min_limit]>!!!)

  o100 elseif [#<_psng_compensation_xlength> LE 0]
     (ABORT,!!! GRID X LENGTH #<_psng_compensation_xlength>LOWER OR EQUAL TO 0 !!!)

  o100 elseif [#<_psng_compensation_ylength> LE 0]
     (ABORT,!!! GRID Y LENGTH #<_psng_compensation_ylength>LOWER OR EQUAL TO 0 !!!)

  o100 elseif [[#<_psng_compensation_xcount> LT 2] OR [#<_psng_compensation_ycount> LT 2]]
     (ABORT,!!! GRID COUNT MINIMUM 2*2 !!!)
  o100 endif

  ; Initialize probe routine from change tool position  o<reset_offset> call [1] used for bypass reset offset confirmation
  ;o<backup_coord_offset_saving> call ; now directly done with backup_status_saving
  o<reset_offset> call [1]            ; 1 = no pause to ask

  ; ask user if all is safe
;  M160    ;o<clear-axis-info> call
;  (DEBUG,PROBE Z START FROM #<_psng_start_z_from_wcs> ABOVE THE TABLE HEIGHT)
;  (DEBUG,USING PROBE_MAX_Z + TABLE_OFFSET + BLOCK_OFFSET - LATCH )
;  (DEBUG,IS Z_EOFFSET_COMPENSATION START IS IN A SAFE XYZ POSITION ?)
;  (DEBUG,NEED TO UNPAUSE OR ABORT)
;  M0
;  M160    ;o<clear-axis-info> call

  ; Z finder initialisation for find the good start Z heigth start from where we are
  o<psng_start_z_probing> call
  o500 call


  ; register new temporary know heigth for restoring at the end
  #<_compensation_initial_z_zero> = #<_Z>
  G10 L20 P0 Z#<_psng_latch>

  ; register initial Z position
  #<_compensation_initial_Z> = #<_Z>





  ; start to register point
  (PROBEOPEN probe-compensation-grid-results.txt)               ; this is not a comment this is interpreted for file saving

  ; register initial position
  #<_y_pos_calc> = #<_y>
  #<_x_pos_calc> = #<_x>


  o300 while [#<_y_count_done> LT #<_psng_compensation_ycount>]

       ;(DEBUG,Y ROW #<_y_count_done> FROM #<_psng_compensation_ycount>)

       o400 while [#<_x_count_done> LT #<_psng_compensation_xcount>]  ; - 1 due to first X probing point is done at the first Y row

            ; Start X probing in the Y row n time
            G91
            G38.3 Z-[#<_psng_latch>*1.5] F#<_psng_vel_for_probe> ; *1.3  after a latch move we need to probe a little more for be sure to found the contact point
            o500 call

            ; Move Z away
            G90 ; force G90 for G54 initial move
            G1 Z#<_compensation_initial_Z> F#<_psng_vel_for_travel>

            ; update X count
            ;(DEBUG,X ROW #<_x_count_done> FROM #<_psng_compensation_xcount>)
            #<_x_count_done> = [#<_x_count_done> + 1]

            ; Start X move n time need to be done after count + 1 for correct calc
            o430 if [#<_x_count_done> LT #<_psng_compensation_xcount>]

                 ; calcul for move + bypass safety position and move to the point
                 o412 if [#<_direction> EQ 0]
                      #<_x_pos_calc> = [#<_x> + #<_x_move_travel>]
                 o412 else
                      #<_x_pos_calc> = [#<_x> - #<_x_move_travel>]
                 o412 endif

                 ; move next X pos
                 G1 X[#<_x_pos_calc>] F#<_psng_vel_for_travel>

            o430 else

                 ; update Y count
                 #<_y_count_done> = [#<_y_count_done> + 1]

                 ; Start Y move n time need to be done after count + 1 for correct calc
                 o436 if [#<_y_count_done> LT #<_psng_compensation_ycount>]

                      ; calcul for move + bypass safety position and move to the point
                      #<_y_pos_calc> = [#<_y> - #<_y_move_travel>]

                      ; change X direction for next Y row
                      o437 if [#<_direction> EQ 0]
                           #<_direction> = 1
                      o437 elseif [#<_direction> EQ 1]
                           #<_direction> = 0
                      o437 endif

                      ; move next Y pos
                      ;o800 call
                      G1 Y[#<_y_pos_calc>] F#<_psng_vel_for_travel>

                 o436 endif

            o430 endif

       o400 endwhile

       o440 if [#<_x_count_done> EQ #<_psng_compensation_xcount>]

            ; reset x count for next Y row !!! NEED TO BE DONE OUTSIDE OF THE WHILE FOR PREVENT INFINITE LOOP
            #<_x_count_done> = 0

       o440 elseif [#<_x_count_done> LT #<_psng_compensation_xcount>]

            ; end of the probe compensation : save the file + goto change tool position
            (PROBECLOSE) ; this is not a comment this is interpreted for file saving when a error append
            (ABORT,!!! SOMETHING WAS WRONG FOR X_COUNT_CALC_DONE #<_x_count_done> VS X_COUNT #<_psng_compensation_xcount> !!!)

       o440 endif

  o300 endwhile

  ; clear temp new know heigth
  G10 L20 P0 Z#<_compensation_initial_z_zero>
  ;G92.1


  ; end of the probe compensation : save the file + goto change tool position
  (PROBECLOSE)             ; this is not a comment this is interpreted for file saving
  o<psng_goto_changepos> call



o500 sub
     o510 if [#5070 EQ 0]
          (PROBECLOSE) ; this is not a comment this is interpreted for file saving when a error append
          (ABORT,PROBE COMPENSATION DOES NOT FOUND THE CONTACT POINT)
     o510 endif
o500 endsub

o<psng_probe_compensation> endsub
M2

